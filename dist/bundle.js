!function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(i,o,function(t){return e[t]}.bind(null,o));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(e,t,n){var i=n(1),o=n(2);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var l={insert:"head",singleton:!1};i(o,l);e.exports=o.locals||{}},function(e,t,n){"use strict";var i,o=function(){return void 0===i&&(i=Boolean(window&&document&&document.all&&!window.atob)),i},l=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function r(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function s(e,t){for(var n={},i=[],o=0;o<e.length;o++){var l=e[o],s=t.base?l[0]+t.base:l[0],c=n[s]||0,d="".concat(s," ").concat(c);n[s]=c+1;var p=r(d),m={css:l[1],media:l[2],sourceMap:l[3]};-1!==p?(a[p].references++,a[p].updater(m)):a.push({identifier:d,updater:g(m,t),references:1}),i.push(d)}return i}function c(e){var t=document.createElement("style"),i=e.attributes||{};if(void 0===i.nonce){var o=n.nc;o&&(i.nonce=o)}if(Object.keys(i).forEach((function(e){t.setAttribute(e,i[e])})),"function"==typeof e.insert)e.insert(t);else{var a=l(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var d,p=(d=[],function(e,t){return d[e]=t,d.filter(Boolean).join("\n")});function m(e,t,n,i){var o=n?"":i.media?"@media ".concat(i.media," {").concat(i.css,"}"):i.css;if(e.styleSheet)e.styleSheet.cssText=p(t,o);else{var l=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(l,a[t]):e.appendChild(l)}}function f(e,t,n){var i=n.css,o=n.media,l=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),l&&btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(l))))," */")),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}var u=null,v=0;function g(e,t){var n,i,o;if(t.singleton){var l=v++;n=u||(u=c(t)),i=m.bind(null,n,l,!1),o=m.bind(null,n,l,!0)}else n=c(t),i=f.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return i(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;i(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var n=s(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var i=0;i<n.length;i++){var o=r(n[i]);a[o].references--}for(var l=s(e,t),c=0;c<n.length;c++){var d=r(n[c]);0===a[d].references&&(a[d].updater(),a.splice(d,1))}n=l}}}},function(e,t,n){(t=n(3)(!1)).push([e.i,"@import url(https://fonts.googleapis.com/css2?family=MuseoModerno:wght@100;900&display=swap);"]),t.push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Piedra&display=swap);"]),t.push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Holtwood+One+SC&display=swap);"]),t.push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Acme&display=swap);"]),t.push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Dancing+Script:wght@700&display=swap);"]),t.push([e.i,'@keyframes new_buttton_animation{from{background-color:#fff;width:4rem;height:3rem}to{background-color:#9acd32;width:4.5rem;height:3.5rem}}.navbar{height:5rem;background-color:#111}.navbar .navbar-brand{font-size:2.5rem;font-family:"Piedra",cursive;color:#f0eddb}.navbar .new_buttton{position:absolute;right:5rem;background-color:#fff;width:4rem;height:3rem;border-radius:25px;font-size:1.5rem;font-weight:800;font-family:"Acme",sans-serif}.navbar .new_buttton:hover{animation-name:new_buttton_animation;animation-duration:1.2s;background-color:#9acd32;width:4.5rem;height:3.5rem;cursor:cell}.sidenav{height:100%;width:160px;position:fixed;z-index:1;top:0;left:0;background-color:#111;overflow-x:hidden;padding-top:5rem}.sidenav .general{margin-bottom:3rem}.sidenav .general div{position:relative;top:-3.5rem;margin-left:1rem;text-decoration:none;font-family:"Holtwood One SC",serif;font-size:1rem;color:#f3eaea;display:block}.sidenav .general div:hover{color:#6ad324;cursor:pointer}.sidenav .projects_text{text-align:center;background-color:#918a8a;margin-top:1rem;font-size:1rem;font-family:"Holtwood One SC",serif;color:#fff;display:block}@keyframes p_names_animation{from{background-color:#726f6f}to{background-color:#fff}}.sidenav #projects{max-height:10rem;overflow-y:hidden}.sidenav #projects a{color:#fff}.sidenav #projects a:hover{animation-name:p_names_animation;animation-duration:.5s;color:#000;background-color:#fff;cursor:pointer}.sidenav #projects::-webkit-scrollbar{display:none}.sidenav a:hover{color:#f1f1f1}@keyframes example{from{background-color:#000;color:#080000;-webkit-box-shadow:0px 0px 68px 89px rgba(0,0,0,.75);-moz-box-shadow:0px 0px 68px 89px rgba(0,0,0,.75);box-shadow:0px 0px 68px 89px rgba(0,0,0,.75)}to{background-color:gray;color:#f0eddb;-webkit-box-shadow:0px 0px 68px 0px rgba(0,0,0,.75);-moz-box-shadow:0px 0px 68px 0px rgba(0,0,0,.75);box-shadow:0px 0px 68px 0px rgba(0,0,0,.75)}}.nothing_here{padding:2rem;background-color:gray;margin-top:11rem;color:#f0eddb;font-size:2rem;font-weight:700;font-family:"MuseoModerno",cursive;animation-name:example;animation-duration:4s;-webkit-box-shadow:0px 0px 68px 0px rgba(0,0,0,.75);-moz-box-shadow:0px 0px 68px 0px rgba(0,0,0,.75);box-shadow:0px 0px 68px 0px rgba(0,0,0,.75)}.step_div{width:100%;position:relative;left:5rem;height:auto}.step_div div{border:1px solid #000;height:100%;border-radius:8px}.step_div .allsteps_title{background-color:#e8ecf1;font-family:"Holtwood One SC",serif;height:4rem;border-radius:20px !important}.step_div .allsteps_title span{position:relative;left:-2.5rem}@keyframes all_projects_animation{from{background-color:#ebe3ce;color:#080000}to{background-color:#bfd890;color:#080000;-webkit-box-shadow:0px 0px 68px 0px rgba(0,0,0,.75);-moz-box-shadow:0px 0px 68px 0px rgba(0,0,0,.75);box-shadow:0px 0px 68px 0px rgba(0,0,0,.75)}}.step_div .allprojects_title{background-color:#ebe3ce;font-family:"Holtwood One SC",serif;height:4rem;border-radius:20px !important}.step_div .allprojects_title span{position:relative;left:-2.5rem}.step_div .allprojects_title:hover{animation-name:all_projects_animation;animation-duration:1s;color:#080000;background-color:#bfd890;-webkit-box-shadow:0px 0px 68px 0px rgba(0,0,0,.75);-moz-box-shadow:0px 0px 68px 0px rgba(0,0,0,.75);box-shadow:0px 0px 68px 0px rgba(0,0,0,.75);cursor:pointer}.step_div .single_step{height:2rem;margin-bottom:.5rem}.step_div .single_step .project_name{width:11rem;background-color:#e8ecf1;font-family:"Holtwood One SC",serif;font-size:.7rem}.step_div .single_step .project_name_fix{width:11rem;background-color:#e8ecf1;font-family:"Holtwood One SC",serif}@keyframes project_name_fix_animation{from{background-color:#f5efef}to{background-color:#9acd32}}.step_div .single_step .project_name_fix:hover{animation-name:project_name_fix_animation;animation-duration:.5s;background-color:#9acd32;cursor:pointer}.step_div .single_step .completed_link_fix{fill:#000}@keyframes completed_link_fix_animation{from{fill:#000}to{fill:#668d18}}.step_div .single_step .completed_link_fix:hover{fill:#668d18;animation-name:completed_link_fix_animation;animation-duration:.5s}.step_div .single_step .death_line_fix{width:6.5rem;padding-left:.5rem;padding-right:.5rem;font-size:.7rem;font-family:"Holtwood One SC",serif;background-color:#e8ecf1}.step_div .single_step .step_name{width:45rem;background-color:#f5f5f5;font-family:"Dancing Script",cursive;font-size:1.5rem}.step_div .single_step .step_name_fix{width:45rem;background-color:#e6dcdc;font-family:"Holtwood One SC",serif}.step_div .single_step .project_desc_fix{width:100% !important;background-color:#e6dcdc;font-family:"Holtwood One SC",serif}.step_div .single_step .priority{width:6rem;font-family:"Holtwood One SC",serif;font-size:.7rem}.step_div .single_step .priority_fix{width:6rem;font-family:"Holtwood One SC",serif;background-color:#e8ecf1;font-size:.8rem}.step_div .single_step .erase_link{background-color:#f5f5f5}.step_div .single_step .completed_link{background-color:#f5f5f5}.step_div .single_step .death_line{background-color:#f5f5f5;width:6.5rem;font-size:.9rem;font-weight:800}',""]),e.exports=t},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",i=e[3];if(!i)return n;if(t&&"function"==typeof btoa){var o=(a=i,r=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),"/*# ".concat(s," */")),l=i.sources.map((function(e){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(e," */")}));return[n].concat(l).concat([o]).join("\n")}var a,r,s;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,i){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(i)for(var l=0;l<this.length;l++){var a=this[l][0];null!=a&&(o[a]=!0)}for(var r=0;r<e.length;r++){var s=[].concat(e[r]);i&&o[s[0]]||(n&&(s[2]?s[2]="".concat(n," and ").concat(s[2]):s[2]=n),t.push(s))}},t}},function(e,t,n){"use strict";n.r(t);n(0);var i={projectName:void 0,projectSteps:{},projectDescription:void 0};var o={create:(e,t)=>!Object.keys(localStorage).includes(e)&&(localStorage.setItem(e,JSON.stringify(t)),!0),erase:e=>(Object.keys(localStorage).includes(e)&&localStorage.removeItem(e),!1),read:e=>{if(Object.keys(localStorage).includes(e))return JSON.parse(localStorage.getItem(e))},update:(e,t)=>!!Object.keys(localStorage).includes(e)&&(localStorage.setItem(e,JSON.stringify(t)),!0),all_projects:()=>Object.entries(localStorage)};var l=()=>{const e=i,t=document.querySelector("#project-name").value,n=document.querySelector("#project-description").value;e.projectName=t,e.projectDescription=n,["project-name","project-description"].forEach(e=>{document.querySelector("#"+e).value=""}),o.create(e.projectName,e),v()};var a=e=>{const t=document.getElementById("step_div"),n={high:"background-color:rgba(236, 15, 15, 0.6)",moderate:"background-color:rgba(243, 114, 9, 0.6)",low:"background-color:rgba(52, 228, 190, 0.4)"},i=`\n    <div class="single_step d-flex align-items-center">\n        <div class="project_name d-flex justify-content-center align-items-center">${e.stepTitle}</div>\n        <div class="step_name d-flex justify-content-center align-items-center">${e.stepDescription}</div>\n        \n        <div id='${e.stepTitle}' class="completed_link_fix d-flex align-items-center">\n            <svg width="32" height="32" viewBox="0 0 145.4 145.4">\n                \n                <path d="M72.7,0a72.7,72.7,0,1,0,72.7,72.7A72.7,72.7,0,0,0,72.7,0Zm41.5,55.43L68.66,101.84a7.56,7.56,0,0,1-10.77,0L31.23,75a7.57,7.57,0,0,1,.08-10.74l1.17-1.14a7.56,7.56,0,0,1,10.6,0L57.66,77.59a7.57,7.57,0,0,0,10.68,0l33.82-34a7.57,7.57,0,0,1,10.72,0l1.27,1.27A7.58,7.58,0,0,1,114.2,55.43Z"/>\n                \n            </svg>\n        </div>\n        <div class="death_line_fix d-flex justify-content-center align-items-center">${e.stepDate}</div>\n        <div class="priority d-flex justify-content-center align-items-center" style="${n[e.stepPriority]}">${e.stepPriority}</div>\n    </div>\n    \n    `;t.innerHTML+=i;const l=document.getElementById(e.stepTitle),a=o.read(e.stepProject);l.addEventListener("click",(function(){delete a.projectSteps[e.stepTitle],console.log("PROJECT:  ",a),o.update(a.projectName,a),console.log("NEW PROJECT:  ",a),p(a.projectName)}))};const r=o.read("To Do list in JS");o.update(r);var s=(e,t,n,i)=>({stepTitle:e,stepDescription:t,stepDate:n,stepPriority:i,stepProject:"",stepStatus:!0});var c=e=>{const t=document.querySelector("#step-name").value,n=document.querySelector("#step-description").value,i=document.querySelector("#death_line_step").value,l=document.querySelector("#priority_step").value,a=s(t,n,i,l);["step-name","step-description","death_line_step","priority_step"].forEach(e=>{document.querySelector("#"+e).value=""}),a.stepProject=e.projectName,e.projectSteps[t]=a,o.update(e.projectName,e),v()};const d=e=>{const t=document.getElementById("main"),n=o.read(e);console.log("ONE;;;;"),t.innerHTML="";const i=`\n                    <div class="step_div" id='step_div'>\n                        <div class="allsteps_title d-flex justify-content-center align-items-center">\n                            <span style='font-size:2rem'>${e}</span>\n                        </div>\n                        <div class="single_step d-flex align-items-center" style='margin-bottom: 3rem;'>\n                            <div class="project_name_fix d-flex justify-content-center align-items-center" data-toggle="modal" data-target="#new_step_modal" id='new_step'>NewStep</div>\n                            <div class="step_name_fix d-flex justify-content-center align-items-center">${n.projectDescription}</div>\n                            \n                            <div class="completed_link d-flex align-items-center">\n                                <svg width="32" height="32" viewBox="0 0 145.4 145.4" >\n                                    \n                                    <path d="M72.7,0a72.7,72.7,0,1,0,72.7,72.7A72.7,72.7,0,0,0,72.7,0Zm41.5,55.43L68.66,101.84a7.56,7.56,0,0,1-10.77,0L31.23,75a7.57,7.57,0,0,1,.08-10.74l1.17-1.14a7.56,7.56,0,0,1,10.6,0L57.66,77.59a7.57,7.57,0,0,0,10.68,0l33.82-34a7.57,7.57,0,0,1,10.72,0l1.27,1.27A7.58,7.58,0,0,1,114.2,55.43Z"/>\n                                    \n                                </svg>\n                            </div>\n                            <div class="death_line_fix d-flex align-items-center">Death Line</div>\n                            <div class="priority_fix d-flex justify-content-center align-items-center">Priority</div>\n                        </div>\n                        \n                    </div>\n\n                    <div class="modal fade" id="new_step_modal" tabindex="-1" role="dialog" aria-labelledby="new_step_modal" aria-hidden="true">\n                        <div class="modal-dialog" role="document">\n                            <div class="modal-content">\n                                <div class="modal-header">\n                                <h5 class="modal-title" id="exampleModalLabel">New message</h5>\n                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                                    <span aria-hidden="true">&times;</span>\n                                </button>\n                                </div>\n                                <div class="modal-body">\n                                <form>\n                                    <div class="form-group">\n                                        <label for="recipient-name" class="col-form-label">Step Name:</label>\n                                        <input type="text" class="form-control" id="step-name">\n                                    </div>\n                                    <div class="form-group">\n                                        <label for="message-text" class="col-form-label">Description:</label>\n                                        <input class="form-control" id="step-description">\n                                    </div>\n                                    <div class="form-group">\n                                        <label for="message-text" class="col-form-label">Death Line:</label>\n                                        <input type="date" class="form-control" id="death_line_step">\n                                    </div>\n                                    <div class="form-group">\n                                        <label for="priority">Priority</label>\n                                        <select class="form-control" id="priority_step">\n                                        <option hidden="" selected="">Priority</option>\n                                        <option value="high">High</option>\n                                        <option value="moderate">Moderate</option>\n                                        <option value="low">Low</option>\n                                        </select>\n                                    </div>\n                                </form>\n                                </div>\n                                <div class="modal-footer">\n                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>\n                                <button type="button" class="btn btn-primary" data-dismiss="modal" id = 'save_step' >Save</button>\n                                </div>\n                            </div>\n                        </div>\n                </div>\n    `;t.innerHTML+=i;const l=n.projectSteps;console.log("RENDER PROJECT STEPS: ",l);document.getElementById("save_step").addEventListener("click",(function(){c(n),d(e)})),Object.keys(l).sort((function(e,t){return new Date(l[e].stepDate)-new Date(l[t].stepDate)})).forEach(e=>{a(l[e])})};var p=d;var m=()=>{const e=document.getElementById("main");e.innerHTML="",Object.entries(localStorage).forEach(t=>{const n=o.read(t[0]),i=`\n        <div class="step_div " id='step_div'>\n            <div class="allprojects_title d-flex justify-content-center align-items-center" id='${n.projectName}'>\n                <span style='font-size:2rem' >${n.projectName}</span>\n            </div>\n            <div class="single_step d-flex align-items-center" style='margin-bottom: 3rem;'>\n                <div class="project_name_fix d-flex justify-content-center align-items-center" data-toggle="modal" data-target="#new_step_modal" id='new_step'>Description</div>\n                <div class="step_name_fix d-flex justify-content-center align-items-center">${n.projectDescription}</div>\n                \n                <div class="completed_link_fix d-flex align-items-center">\n                    <svg width="32" height="32" viewBox="0 0 145.4 145.4" >\n                        \n                        <path d="M72.7,0a72.7,72.7,0,1,0,72.7,72.7A72.7,72.7,0,0,0,72.7,0Zm41.5,55.43L68.66,101.84a7.56,7.56,0,0,1-10.77,0L31.23,75a7.57,7.57,0,0,1,.08-10.74l1.17-1.14a7.56,7.56,0,0,1,10.6,0L57.66,77.59a7.57,7.57,0,0,0,10.68,0l33.82-34a7.57,7.57,0,0,1,10.72,0l1.27,1.27A7.58,7.58,0,0,1,114.2,55.43Z"/>\n                        \n                    </svg>\n                </div>\n                \n            </div>\n            \n        </div>\n        `;e.innerHTML+=i});const t=document.getElementsByClassName("allprojects_title");for(var n=0;n<t.length;n++){const e=t[n].id;t[n].addEventListener("click",(function(){p(e)}))}};var f=()=>{const e=document.getElementById("main");e.innerHTML="";e.innerHTML+='\n            <div class="step_div" id=\'step_div\'>\n                <div class="allsteps_title d-flex justify-content-center align-items-center">\n                    <span>Every Single Step</span>\n                </div>\n                <div class="single_step d-flex align-items-center" style=\'margin-bottom: 3rem;\'>\n                    <div class="project_name_fix d-flex justify-content-center align-items-center">Project</div>\n                    <div class="step_name_fix d-flex justify-content-center align-items-center">Step</div>\n                    <div class="erase_link d-flex align-items-center">\n                        <svg width="32" height="32" xmlns="">\n\n                            <path id="svg_1" fill-rule="evenodd" fill="#333333" d="m29.98,6.819c-0.096,-1.57 -1.387,-2.816 -2.98,-2.816l-3,0l0,-1l0,-0.002c0,-1.657 -1.344,-3 -3,-3l-10,0c-1.657,0 -3,1.343 -3,3l0,0.001l0,1l-3,0c-1.595,0 -2.885,1.246 -2.981,2.816l-0.019,0l0,1.183l0,1c0,1.104 0.896,2 2,2l0,0l0,17c0,2.209 1.791,4 4,4l16,0c2.209,0 4,-1.791 4,-4l0,-17l0,0c1.104,0 2,-0.896 2,-2l0,-1l0,-1.182l-0.02,0zm-19.98,-3.817c0,-0.553 0.447,-1 1,-1l10,0c0.553,0 1,0.447 1,1l0,1l-12,0l0,-1zm16,25c0,1.102 -0.898,2 -2,2l-16,0c-1.103,0 -2,-0.898 -2,-2l0,-17l20,0l0,17zm2,-20.001l0,1l-24,0l0,-1l0,-0.999c0,-0.553 0.447,-1 1,-1l22,0c0.553,0 1,0.447 1,1l0,0.999z" clip-rule="evenodd"/>\n                            <path id="svg_2" fill-rule="evenodd" fill="#333333" d="m9,28.006l2,0c0.553,0 1,-0.447 1,-1l0,-13c0,-0.553 -0.447,-1 -1,-1l-2,0c-0.553,0 -1,0.447 -1,1l0,13c0,0.553 0.447,1 1,1zm0,-14.001l2,0l0,13l-2,0l0,-13z" clip-rule="evenodd"/>\n                            <path id="svg_3" fill-rule="evenodd" fill="#333333" d="m15,28.006l2,0c0.553,0 1,-0.447 1,-1l0,-13c0,-0.553 -0.447,-1 -1,-1l-2,0c-0.553,0 -1,0.447 -1,1l0,13c0,0.553 0.447,1 1,1zm0,-14.001l2,0l0,13l-2,0l0,-13z" clip-rule="evenodd"/>\n                            <path id="svg_4" fill-rule="evenodd" fill="#333333" d="m21,28.006l2,0c0.553,0 1,-0.447 1,-1l0,-13c0,-0.553 -0.447,-1 -1,-1l-2,0c-0.553,0 -1,0.447 -1,1l0,13c0,0.553 0.447,1 1,1zm0,-14.001l2,0l0,13l-2,0l0,-13z" clip-rule="evenodd"/>\n                            \n                        </svg>\n                    </div>\n                    <div class="completed_link d-flex align-items-center">\n                        <svg width="32" height="32" viewBox="0 0 145.4 145.4">\n                            \n                            <path d="M72.7,0a72.7,72.7,0,1,0,72.7,72.7A72.7,72.7,0,0,0,72.7,0Zm41.5,55.43L68.66,101.84a7.56,7.56,0,0,1-10.77,0L31.23,75a7.57,7.57,0,0,1,.08-10.74l1.17-1.14a7.56,7.56,0,0,1,10.6,0L57.66,77.59a7.57,7.57,0,0,0,10.68,0l33.82-34a7.57,7.57,0,0,1,10.72,0l1.27,1.27A7.58,7.58,0,0,1,114.2,55.43Z"/>\n                            \n                        </svg>\n                    </div>\n                    <div class="death_line_fix d-flex align-items-center">Death Line</div>\n                    <div class="priority_fix d-flex justify-content-center align-items-center">Priority</div>\n                </div>\n                \n            </div>\n    ',Object.entries(localStorage).forEach(e=>{const t=document.getElementById("step_div"),n=e[0],i=o.read(e[0]).projectSteps,l=`\n                            <div class="allsteps_title d-flex justify-content-center align-items-center">\n                                <span>${n}</span>\n                            </div>   \n        `;t.innerHTML+=l;for(var a=0;a<Object.keys(i).length;a++){const e=Object.keys(i);console.log("PODER CONTAGIARME:: ",i[e[a]]);const n=`\n                <div class="single_step d-flex align-items-center" >\n                    <div class="project_name d-flex justify-content-center align-items-center">${e[a]}</div>\n                    <div class="step_name d-flex justify-content-center align-items-center">${i[e[a]].stepDescription}</div>\n                    <div class="erase_link d-flex align-items-center">\n                        <svg width="32" height="32" xmlns="">\n\n                            <path id="svg_1" fill-rule="evenodd" fill="#333333" d="m29.98,6.819c-0.096,-1.57 -1.387,-2.816 -2.98,-2.816l-3,0l0,-1l0,-0.002c0,-1.657 -1.344,-3 -3,-3l-10,0c-1.657,0 -3,1.343 -3,3l0,0.001l0,1l-3,0c-1.595,0 -2.885,1.246 -2.981,2.816l-0.019,0l0,1.183l0,1c0,1.104 0.896,2 2,2l0,0l0,17c0,2.209 1.791,4 4,4l16,0c2.209,0 4,-1.791 4,-4l0,-17l0,0c1.104,0 2,-0.896 2,-2l0,-1l0,-1.182l-0.02,0zm-19.98,-3.817c0,-0.553 0.447,-1 1,-1l10,0c0.553,0 1,0.447 1,1l0,1l-12,0l0,-1zm16,25c0,1.102 -0.898,2 -2,2l-16,0c-1.103,0 -2,-0.898 -2,-2l0,-17l20,0l0,17zm2,-20.001l0,1l-24,0l0,-1l0,-0.999c0,-0.553 0.447,-1 1,-1l22,0c0.553,0 1,0.447 1,1l0,0.999z" clip-rule="evenodd"/>\n                            <path id="svg_2" fill-rule="evenodd" fill="#333333" d="m9,28.006l2,0c0.553,0 1,-0.447 1,-1l0,-13c0,-0.553 -0.447,-1 -1,-1l-2,0c-0.553,0 -1,0.447 -1,1l0,13c0,0.553 0.447,1 1,1zm0,-14.001l2,0l0,13l-2,0l0,-13z" clip-rule="evenodd"/>\n                            <path id="svg_3" fill-rule="evenodd" fill="#333333" d="m15,28.006l2,0c0.553,0 1,-0.447 1,-1l0,-13c0,-0.553 -0.447,-1 -1,-1l-2,0c-0.553,0 -1,0.447 -1,1l0,13c0,0.553 0.447,1 1,1zm0,-14.001l2,0l0,13l-2,0l0,-13z" clip-rule="evenodd"/>\n                            <path id="svg_4" fill-rule="evenodd" fill="#333333" d="m21,28.006l2,0c0.553,0 1,-0.447 1,-1l0,-13c0,-0.553 -0.447,-1 -1,-1l-2,0c-0.553,0 -1,0.447 -1,1l0,13c0,0.553 0.447,1 1,1zm0,-14.001l2,0l0,13l-2,0l0,-13z" clip-rule="evenodd"/>\n                            \n                        </svg>\n                    </div>\n                    <div class="completed_link d-flex align-items-center">\n                            <svg width="32" height="32" viewBox="0 0 145.4 145.4">\n                                \n                                <path d="M72.7,0a72.7,72.7,0,1,0,72.7,72.7A72.7,72.7,0,0,0,72.7,0Zm41.5,55.43L68.66,101.84a7.56,7.56,0,0,1-10.77,0L31.23,75a7.57,7.57,0,0,1,.08-10.74l1.17-1.14a7.56,7.56,0,0,1,10.6,0L57.66,77.59a7.57,7.57,0,0,0,10.68,0l33.82-34a7.57,7.57,0,0,1,10.72,0l1.27,1.27A7.58,7.58,0,0,1,114.2,55.43Z"/>\n                                \n                            </svg>\n                        </div>\n                        <div class="death_line_fix d-flex align-items-center">Death Line</div>\n                        <div class="priority_fix d-flex justify-content-center align-items-center">Priority</div>\n                    </div>\n                    `;t.innerHTML+=n}})};var u=()=>{document.getElementById("body").innerHTML+='\n                \n                <div class="sidenav">\n                    <div class="general">\n                        <div id="all_projects">All Projects</div>\n                        <div id="all_steps">All Steps</div>\n                    </div>\n                \n                    <div class="projects_text">\n                        Your Projects\n                    </div>\n                    <div id="projects" class=\'d-flex flex-column text-center overflow-auto\'>\n                        ...\n                    </div>\n                    <div class="projects_text">\n                        Your Steps\n                    </div>\n                    <div id="steps">\n                        ...\n                    </div>\n                </div>\n\n                <div class="main container mt-5" id=\'main\'>\n                    \n                </div>\n\n    ';const e=document.getElementById("projects");Object.entries(localStorage).forEach(t=>{const n=`\n        <a class = 'projects_link'>${t[0]}</a>\n        `;e.innerHTML+=n});const t=document.getElementsByClassName("projects_link");for(var n=0;n<t.length;n++){const e=t[n].textContent;t[n].addEventListener("click",(function(){p(e)}))}document.getElementById("all_projects").addEventListener("click",(function(){m()}));document.getElementById("all_steps").addEventListener("click",(function(){f()}))};var v=()=>{const e=document.getElementById("body");e.innerHTML="";e.innerHTML+='\n                <nav class="navbar d-flex justify-content-center">\n                    <a class="navbar-brand" href="#">easy2do</a>\n                    <a class="new_buttton d-flex justify-content-center align-items-center" id = \'new_project\' data-toggle="modal" data-target="#new_project_modal"> NEW </a>\n                    \n                </nav>\n                \n\n                <div class="modal fade" id="new_project_modal" tabindex="-1" role="dialog" aria-labelledby="new_project_modal" aria-hidden="true">\n                    <div class="modal-dialog" role="document">\n                    <div class="modal-content">\n                        <div class="modal-header">\n                        <h5 class="modal-title" id="exampleModalLabel">New message</h5>\n                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                            <span aria-hidden="true">&times;</span>\n                        </button>\n                        </div>\n                        <div class="modal-body">\n                        <form>\n                            <div class="form-group">\n                            <label for="recipient-name" class="col-form-label">Project Name:</label>\n                            <input type="text" class="form-control" id="project-name">\n                            </div>\n                            <div class="form-group">\n                            <label for="message-text" class="col-form-label">Description:</label>\n                            <input class="form-control" id="project-description">\n                            </div>\n                        </form>\n                        </div>\n                        <div class="modal-footer">\n                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>\n                        <button type="button" class="btn btn-primary" data-dismiss="modal" id = \'save\' >Save</button>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n    ',u();document.getElementById("save").addEventListener("click",(function(){l()}))};v()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,