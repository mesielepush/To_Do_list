!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(e,t,n){var o=n(1),i=n(2);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);var a={insert:"head",singleton:!1};o(i,a);e.exports=i.locals||{}},function(e,t,n){"use strict";var o,i=function(){return void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o},a=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),r=[];function s(e){for(var t=-1,n=0;n<r.length;n++)if(r[n].identifier===e){t=n;break}return t}function l(e,t){for(var n={},o=[],i=0;i<e.length;i++){var a=e[i],l=t.base?a[0]+t.base:a[0],c=n[l]||0,d="".concat(l," ").concat(c);n[l]=c+1;var p=s(d),m={css:a[1],media:a[2],sourceMap:a[3]};-1!==p?(r[p].references++,r[p].updater(m)):r.push({identifier:d,updater:g(m,t),references:1}),o.push(d)}return o}function c(e){var t=document.createElement("style"),o=e.attributes||{};if(void 0===o.nonce){var i=n.nc;i&&(o.nonce=i)}if(Object.keys(o).forEach((function(e){t.setAttribute(e,o[e])})),"function"==typeof e.insert)e.insert(t);else{var r=a(e.insert||"head");if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}return t}var d,p=(d=[],function(e,t){return d[e]=t,d.filter(Boolean).join("\n")});function m(e,t,n,o){var i=n?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(e.styleSheet)e.styleSheet.cssText=p(t,i);else{var a=document.createTextNode(i),r=e.childNodes;r[t]&&e.removeChild(r[t]),r.length?e.insertBefore(a,r[t]):e.appendChild(a)}}function f(e,t,n){var o=n.css,i=n.media,a=n.sourceMap;if(i?e.setAttribute("media",i):e.removeAttribute("media"),a&&btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=o;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(o))}}var u=null,v=0;function g(e,t){var n,o,i;if(t.singleton){var a=v++;n=u||(u=c(t)),o=m.bind(null,n,a,!1),i=m.bind(null,n,a,!0)}else n=c(t),o=f.bind(null,n,t),i=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return o(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;o(e=t)}else i()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=i());var n=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var o=0;o<n.length;o++){var i=s(n[o]);r[i].references--}for(var a=l(e,t),c=0;c<n.length;c++){var d=s(n[c]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}n=a}}}},function(e,t,n){(t=n(3)(!1)).push([e.i,"@import url(https://fonts.googleapis.com/css2?family=MuseoModerno:wght@100;900&display=swap);"]),t.push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Piedra&display=swap);"]),t.push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Holtwood+One+SC&display=swap);"]),t.push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Acme&display=swap);"]),t.push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Dancing+Script:wght@700&display=swap);"]),t.push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap);"]),t.push([e.i,'@keyframes new_buttton_animation{from{background-color:#fff;width:4rem;height:3rem}to{background-color:#9acd32;width:4.5rem;height:3.5rem}}.navbar{height:5rem;background-color:#111}.navbar .navbar-brand{font-size:2.5rem;position:relative;left:3rem;font-family:"Piedra",cursive;color:#f0eddb}.navbar .new_buttton{position:absolute;right:5rem;background-color:#fff;width:4rem;height:3rem;border-radius:25px;font-size:1.5rem;font-weight:800;font-family:"Acme",sans-serif}.navbar .new_buttton:hover{animation-name:new_buttton_animation;animation-duration:1.2s;background-color:#9acd32;width:4.5rem;height:3.5rem;cursor:cell}@keyframes example{from{background-color:#000;color:#080000;-webkit-box-shadow:0 0 68px 89px rgba(0,0,0,.75);-moz-box-shadow:0 0 68px 89px rgba(0,0,0,.75);box-shadow:0 0 68px 89px rgba(0,0,0,.75)}to{background-color:gray;color:#f0eddb;-webkit-box-shadow:0 0 68px 0 rgba(0,0,0,.75);-moz-box-shadow:0 0 68px 0 rgba(0,0,0,.75);box-shadow:0 0 68px 0 rgba(0,0,0,.75)}}.nothing_here{padding:2rem;background-color:gray;margin-top:11rem;color:#f0eddb;font-size:2rem;font-weight:700;font-family:"MuseoModerno",cursive;animation-name:example;animation-duration:4s;-webkit-box-shadow:0 0 68px 0 rgba(0,0,0,.75);-moz-box-shadow:0 0 68px 0 rgba(0,0,0,.75);box-shadow:0 0 68px 0 rgba(0,0,0,.75)}.step_div{width:100%;position:relative;left:5rem;height:auto}.step_div div{border:1px solid #000;height:100%;border-radius:8px}.step_div .allsteps_title{background-color:#e8ecf1;font-family:"Holtwood One SC",serif;height:4rem;margin-top:3rem;border-radius:20px !important}.step_div .allsteps_title span{position:relative;left:-2.5rem}@keyframes all_projects_animation{from{background-color:#ebe3ce;color:#080000}to{background-color:#bfd890;color:#080000;-webkit-box-shadow:0 0 68px 0 rgba(0,0,0,.75);-moz-box-shadow:0 0 68px 0 rgba(0,0,0,.75);box-shadow:0 0 68px 0 rgba(0,0,0,.75)}}.step_div .allprojects_title{background-color:#ebe3ce;font-family:"Holtwood One SC",serif;height:4rem;border-radius:20px !important}.step_div .allprojects_title span{position:relative;left:-2.5rem}.step_div .allprojects_title:hover{animation-name:all_projects_animation;animation-duration:1s;color:#080000;background-color:#bfd890;-webkit-box-shadow:0 0 68px 0 rgba(0,0,0,.75);-moz-box-shadow:0 0 68px 0 rgba(0,0,0,.75);box-shadow:0 0 68px 0 rgba(0,0,0,.75);cursor:pointer}.step_div .single_step{height:2rem;margin-bottom:.5rem}.step_div .single_step .project_name{width:11rem;background-color:#e8ecf1;font-family:"Holtwood One SC",serif;font-size:.7rem;cursor:pointer}.step_div .single_step .project_name_fix{width:11rem;background-color:#e8ecf1;font-family:"Holtwood One SC",serif}@keyframes project_name_fix_animation{from{background-color:#f5efef}to{background-color:#9acd32}}.step_div .single_step .project_name_fix:hover{animation-name:project_name_fix_animation;animation-duration:.5s;background-color:#9acd32;cursor:pointer}.step_div .single_step .completed_link_fix{fill:#000}@keyframes completed_link_fix_animation{from{fill:#000}to{fill:#668d18}}.step_div .single_step .completed_link_fix:hover{fill:#668d18;cursor:pointer;animation-name:completed_link_fix_animation;animation-duration:.5s}.step_div .single_step .death_line_fix{width:6.5rem;padding-left:.5rem;padding-right:.5rem;font-size:.7rem;font-family:"Holtwood One SC",serif;background-color:#e8ecf1}.step_div .single_step .step_name{width:45rem;background-color:#f5f5f5;font-family:"Indie Flower",cursive;font-size:1.1rem}.step_div .single_step .step_name_fix{width:45rem;background-color:#e6dcdc;font-family:"Holtwood One SC",serif}.step_div .single_step .project_desc_fix{width:100% !important;background-color:#e6dcdc;font-family:"Holtwood One SC",serif}.step_div .single_step .priority{width:6rem;font-family:"Holtwood One SC",serif;font-size:.7rem}.step_div .single_step .priority_fix{width:6rem;font-family:"Holtwood One SC",serif;background-color:#e8ecf1;font-size:.8rem}.step_div .single_step .erase_link{background-color:#f5f5f5}.step_div .single_step .completed_link{background-color:#f5f5f5}.step_div .single_step .completed_link:hover{cursor:pointer}.step_div .single_step .death_line{background-color:#f5f5f5;width:6.5rem;font-size:.9rem;font-weight:800}.sidenav a:hover{color:#f1f1f1}.sidenav{height:100%;width:160px;position:fixed;z-index:1;top:0;left:0;background-color:#111;overflow-x:hidden;padding-top:5rem}.sidenav .general{margin-bottom:3rem}.sidenav .general div{position:relative;top:-3.5rem;margin-left:1rem;text-decoration:none;font-family:"Holtwood One SC",serif;font-size:1rem;color:#f3eaea;display:block}.sidenav .general div:hover{color:#6ad324;cursor:pointer}.sidenav .projects_text{text-align:center;background-color:#918a8a;margin-top:1rem;font-size:1rem;font-family:"Holtwood One SC",serif;color:#fff;display:block}@keyframes p_names_animation{from{background-color:#726f6f;color:#201f30;font-weight:400;border-bottom:1px solid #31e60d}to{background-color:#fff;color:#000;font-weight:900;border-bottom:5px solid #31e60d}}.sidenav #projects{max-height:25rem;overflow-y:hidden}.sidenav #projects a{color:#fff;margin-bottom:1rem;font-family:"MuseoModerno",cursive}.sidenav #projects a:hover{animation-name:p_names_animation;animation-duration:1s;color:#000;background-color:#fff;font-weight:900;cursor:pointer;border-bottom:5px solid #31e60d}.sidenav #projects::-webkit-scrollbar{display:none}',""]),e.exports=t},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",o=e[3];if(!o)return n;if(t&&"function"==typeof btoa){var i=(r=o,s=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(l," */")),a=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}var r,s,l;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,o){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(o)for(var a=0;a<this.length;a++){var r=this[a][0];null!=r&&(i[r]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&i[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},function(e,t,n){"use strict";n.r(t);n(0);var o={create:(e,t)=>!Object.keys(localStorage).includes(e)&&(localStorage.setItem(e,JSON.stringify(t)),!0),erase:e=>(Object.keys(localStorage).includes(e)&&localStorage.removeItem(e),!1),read:e=>!!Object.keys(localStorage).includes(e)&&JSON.parse(localStorage.getItem(e)),update:(e,t)=>!!Object.keys(localStorage).includes(e)&&(localStorage.setItem(e,JSON.stringify(t)),!0)};var i={projectName:void 0,projectSteps:{},projectDescription:void 0};var a=()=>{const e=i,t=document.querySelector("#project-name").value,n=document.querySelector("#project-description").value;e.projectName=t,e.projectDescription=n,["project-name","project-description"].forEach(e=>{document.querySelector("#"+e).value=""}),o.create(e.projectName,e),b()};var r=(e,t)=>{delete t.projectSteps[e.stepTitle],o.update(t.projectName,t),u(t.projectName)};var s=(e,t,n,o)=>({stepTitle:e,stepDescription:t,stepDate:n,stepPriority:o,stepProject:"",stepStatus:!0});var l=(e,t)=>{if(t){function n(){["step-name_"+t,"step-description_"+t,"death_line_step_"+t,"priority_step_"+t].forEach(e=>{document.querySelector("#"+e).value=""})}const i=document.querySelector("#step-name_"+t).value,a=document.querySelector("#step-description_"+t).value,r=document.querySelector("#death_line_step_"+t).value,l=document.querySelector("#priority_step_"+t).value,c=s(i,a,r,l);n(),c.stepProject=e.projectName,e.projectSteps[i]=c,o.update(e.projectName,e),b()}else{function n(){["step-name","step-description","death_line_step","priority_step"].forEach(e=>{document.querySelector("#"+e).value=""})}const t=document.querySelector("#step-name").value,i=document.querySelector("#step-description").value,a=document.querySelector("#death_line_step").value,r=document.querySelector("#priority_step").value,l=s(t,i,a,r);n(),l.stepProject=e.projectName,e.projectSteps[t]=l,o.update(e.projectName,e),b()}};var c=()=>{Object.entries(localStorage).forEach(e=>{const t=e[0],n=o.read(t),{projectSteps:i}=n,a=Object.keys(i);for(let e=0;e<Object.keys(i).length;e+=1){const o=i[a[e]],s=document.getElementById(i[a[e]].stepTitle),c=document.getElementById("save_"+i[a[e]].stepTitle.replace(/ /g,"_"));s&&(s.addEventListener("click",()=>{r(o,n)}),c.addEventListener("click",()=>{console.log("cliketddd"),l(n,i[a[e]].stepTitle.replace(/ /g,"_")),console.log("save "+i[a[e]].stepTitle),r(o,n),console.log("erase one"),console.log(n),u(t)}))}})};var d=()=>{b();const e=document.getElementById("main");e.innerHTML="",Object.entries(localStorage).forEach(t=>{const n=o.read(t[0]),i=`\n        <div class="step_div " id='step_div'>\n            <div class="allprojects_title d-flex justify-content-center align-items-center" id='${n.projectName}'>\n                <span style='font-size:2rem' >${n.projectName}</span>\n            </div>\n            <div class="single_step d-flex align-items-center" style='margin-bottom: 3rem;'>\n                <div class="project_name_fix d-flex justify-content-center align-items-center" data-toggle="modal" data-target="#new_step_modal" id='new_step'>Description</div>\n                <div class="step_name_fix d-flex justify-content-center align-items-center">${n.projectDescription}</div>\n                \n                <div class="completed_link_fix d-flex align-items-center" id='delete_${n.projectName}'>\n                    <svg width="32" height="32" viewBox="0 0 145.4 145.4" >\n                        \n                        <path d="M72.7,0a72.7,72.7,0,1,0,72.7,72.7A72.7,72.7,0,0,0,72.7,0Zm41.5,55.43L68.66,101.84a7.56,7.56,0,0,1-10.77,0L31.23,75a7.57,7.57,0,0,1,.08-10.74l1.17-1.14a7.56,7.56,0,0,1,10.6,0L57.66,77.59a7.57,7.57,0,0,0,10.68,0l33.82-34a7.57,7.57,0,0,1,10.72,0l1.27,1.27A7.58,7.58,0,0,1,114.2,55.43Z"/>\n                        \n                    </svg>\n                </div>\n                \n            </div>\n            \n        </div>\n        `;e.innerHTML+=i});const t=document.getElementsByClassName("allprojects_title");for(let e=0;e<t.length;e+=1){const n=t[e].id;t[e].addEventListener("click",()=>{u(n)})}for(let e=0;e<t.length;e+=1){const n=t[e].id;document.getElementById("delete_"+n).addEventListener("click",()=>{p(n)})}};var p=e=>{o.erase(e),d()};var m=e=>{const t=document.getElementById("step_div"),n=(document.getElementById("main"),`\n    <div class="single_step d-flex align-items-center">\n        <div class="project_name d-flex justify-content-center align-items-center"  data-toggle="modal" data-target="#${e.stepTitle.replace(/ /g,"_")}">${e.stepTitle}</div>\n        <div class="step_name d-flex justify-content-center align-items-center">${e.stepDescription}</div>\n        \n        <div id='${e.stepTitle}' class="completed_link_fix d-flex align-items-center">\n            <svg width="32" height="32" viewBox="0 0 145.4 145.4">\n                \n                <path d="M72.7,0a72.7,72.7,0,1,0,72.7,72.7A72.7,72.7,0,0,0,72.7,0Zm41.5,55.43L68.66,101.84a7.56,7.56,0,0,1-10.77,0L31.23,75a7.57,7.57,0,0,1,.08-10.74l1.17-1.14a7.56,7.56,0,0,1,10.6,0L57.66,77.59a7.57,7.57,0,0,0,10.68,0l33.82-34a7.57,7.57,0,0,1,10.72,0l1.27,1.27A7.58,7.58,0,0,1,114.2,55.43Z"/>\n                \n            </svg>\n        </div>\n        <div class="death_line_fix d-flex justify-content-center align-items-center">${e.stepDate}</div>\n        <div class="priority d-flex justify-content-center align-items-center" style="${{high:"background-color:rgba(236, 15, 15, 0.6)",moderate:"background-color:rgba(243, 114, 9, 0.6)",low:"background-color:rgba(52, 228, 190, 0.4)"}[e.stepPriority]}">${e.stepPriority}</div>\n    </div>\n        <div class="modal fade" id="${e.stepTitle.replace(/ /g,"_")}" tabindex="-1" role="dialog" aria-labelledby="${e.stepTitle.replace(/ /g,"_")}" aria-hidden="true">\n                            <div class="modal-dialog" role="document">\n                                <div class="modal-content">\n                                    <div class="modal-header">\n                                    <h5 class="modal-title" id="exampleModalLabel">Update ${e.stepTitle}</h5>\n                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                                        <span aria-hidden="true">&times;</span>\n                                    </button>\n                                    </div>\n                                    <div class="modal-body">\n                                    <form>\n                                        <div class="form-group">\n                                            <label for="recipient-name" class="col-form-label">Step Name:</label>\n                                            <input type="text" class="form-control" id="step-name_${e.stepTitle.replace(/ /g,"_")}">\n                                        </div>\n                                        <div class="form-group">\n                                            <label for="message-text" class="col-form-label">Description:</label>\n                                            <input class="form-control" id="step-description_${e.stepTitle.replace(/ /g,"_")}">\n                                        </div>\n                                        <div class="form-group">\n                                            <label for="message-text" class="col-form-label">Death Line:</label>\n                                            <input type="date" class="form-control" id="death_line_step_${e.stepTitle.replace(/ /g,"_")}">\n                                        </div>\n                                        <div class="form-group">\n                                            <label for="priority">Priority</label>\n                                            <select class="form-control" id="priority_step_${e.stepTitle.replace(/ /g,"_")}">\n                                            <option hidden="" selected="">Priority</option>\n                                            <option value="high">High</option>\n                                            <option value="moderate">Moderate</option>\n                                            <option value="low">Low</option>\n                                            </select>\n                                        </div>\n                                    </form>\n                                    </div>\n                                    <div class="modal-footer">\n                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>\n                                    <button type="button" class="btn btn-primary" data-dismiss="modal" id = 'save_${e.stepTitle.replace(/ /g,"_")}' >Save</button>\n                                    </div>\n                                </div>\n                            </div>\n                    </div>\n    `);t.innerHTML+=n};const f=e=>{const t=document.getElementById("main"),n=o.read(e);t.innerHTML="";const i=`\n                    <div class="step_div" id='step_div'>\n                        <div class="allsteps_title d-flex justify-content-center align-items-center">\n                            <span style='font-size:2rem'>${e}</span>\n                        </div>\n                        <div class="single_step d-flex align-items-center" style='margin-bottom: 3rem;'>\n                            <div class="project_name_fix d-flex justify-content-center align-items-center" data-toggle="modal" data-target="#new_step_modal" id='new_step'>NewStep</div>\n                            <div class="step_name_fix d-flex justify-content-center align-items-center">${n.projectDescription}</div>\n                            \n                            <div class="completed_link d-flex align-items-center" id='${e}'>\n                                <svg width="32" height="32" viewBox="0 0 145.4 145.4" >\n                                    \n                                    <path d="M72.7,0a72.7,72.7,0,1,0,72.7,72.7A72.7,72.7,0,0,0,72.7,0Zm41.5,55.43L68.66,101.84a7.56,7.56,0,0,1-10.77,0L31.23,75a7.57,7.57,0,0,1,.08-10.74l1.17-1.14a7.56,7.56,0,0,1,10.6,0L57.66,77.59a7.57,7.57,0,0,0,10.68,0l33.82-34a7.57,7.57,0,0,1,10.72,0l1.27,1.27A7.58,7.58,0,0,1,114.2,55.43Z"/>\n                                    \n                                </svg>\n                            </div>\n                            <div class="death_line_fix d-flex align-items-center">Death Line</div>\n                            <div class="priority_fix d-flex justify-content-center align-items-center">Priority</div>\n                        </div>\n                        \n                    </div>\n\n                    <div class="modal fade" id="new_step_modal" tabindex="-1" role="dialog" aria-labelledby="new_step_modal" aria-hidden="true">\n                        <div class="modal-dialog" role="document">\n                            <div class="modal-content">\n                                <div class="modal-header">\n                                <h5 class="modal-title" id="exampleModalLabel">New Step</h5>\n                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                                    <span aria-hidden="true">&times;</span>\n                                </button>\n                                </div>\n                                <div class="modal-body">\n                                <form>\n                                    <div class="form-group">\n                                        <label for="recipient-name" class="col-form-label">Step Name:</label>\n                                        <input type="text" class="form-control" id="step-name">\n                                    </div>\n                                    <div class="form-group">\n                                        <label for="message-text" class="col-form-label">Description:</label>\n                                        <input class="form-control" id="step-description">\n                                    </div>\n                                    <div class="form-group">\n                                        <label for="message-text" class="col-form-label">Death Line:</label>\n                                        <input type="date" class="form-control" id="death_line_step">\n                                    </div>\n                                    <div class="form-group">\n                                        <label for="priority">Priority</label>\n                                        <select class="form-control" id="priority_step">\n                                        <option hidden="" selected="">Priority</option>\n                                        <option value="high">High</option>\n                                        <option value="moderate">Moderate</option>\n                                        <option value="low">Low</option>\n                                        </select>\n                                    </div>\n                                </form>\n                                </div>\n                                <div class="modal-footer">\n                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>\n                                <button type="button" class="btn btn-primary" data-dismiss="modal" id = 'save_step' >Save</button>\n                                </div>\n                            </div>\n                        </div>\n                </div>\n    `;t.innerHTML+=i;const a=n.projectSteps;document.getElementById("save_step").addEventListener("click",()=>{l(n),f(e)});Object.keys(a).sort((e,t)=>new Date(a[e].stepDate)-new Date(a[t].stepDate)).forEach(e=>{m(a[e])}),c();document.getElementById(e).addEventListener("click",()=>{p(e)})};var u=f;var v=()=>{const e=document.getElementById("main");e.innerHTML="";e.innerHTML+='\n            <div class="step_div" id=\'step_div\'>\n                <div class="allsteps_title d-flex justify-content-center align-items-center">\n                    <span>Every Single Step</span>\n                </div>\n                \n            </div>\n    ',Object.entries(localStorage).forEach(e=>{const t=document.getElementById("step_div"),n=e[0],{projectSteps:i}=o.read(e[0]),a=`\n                            <div class="allsteps_title d-flex justify-content-center align-items-center mt5">\n                                <span>${n}</span>\n                            </div>   \n        `;t.innerHTML+=a;const r=Object.keys(i);for(let e=0;e<Object.keys(i).length;e+=1)m(i[r[e]]);c()})};var g=()=>{document.getElementById("body").innerHTML+='\n                \n                <div class="sidenav">\n                    <div class="general">\n                        <div id="all_projects">All Projects</div>\n                        <div id="all_steps">All Steps</div>\n                    </div>\n                \n                    <div class="projects_text">\n                        Your Projects\n                    </div>\n                    <div id="projects" class=\'d-flex flex-column text-center overflow-auto\'>\n                        ...\n                    </div>\n                    \n                </div>\n\n                <div class="main container mt-5" id=\'main\'>\n                    \n                </div>\n\n    ';const e=document.getElementById("projects");Object.entries(localStorage).forEach(t=>{const n=`\n        <a class = 'projects_link'>${t[0]}</a>\n        `;e.innerHTML+=n});const t=document.getElementsByClassName("projects_link");for(let e=0;e<t.length;e+=1){const n=t[e].textContent;t[e].addEventListener("click",()=>{u(n)})}document.getElementById("all_projects").addEventListener("click",()=>{d()});document.getElementById("all_steps").addEventListener("click",()=>{v()})};var b=()=>{const e=document.getElementById("body");e.innerHTML="";e.innerHTML+='\n                <nav class="navbar d-flex justify-content-center">\n                    <a class="navbar-brand" href="#">easy2do</a>\n                    <a class="new_buttton d-flex justify-content-center align-items-center" id = \'new_project\' data-toggle="modal" data-target="#new_project_modal"> NEW </a>\n                    \n                </nav>\n                \n\n                <div class="modal fade" id="new_project_modal" tabindex="-1" role="dialog" aria-labelledby="new_project_modal" aria-hidden="true">\n                    <div class="modal-dialog" role="document">\n                    <div class="modal-content">\n                        <div class="modal-header">\n                        <h5 class="modal-title" id="exampleModalLabel">New message</h5>\n                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                            <span aria-hidden="true">&times;</span>\n                        </button>\n                        </div>\n                        <div class="modal-body">\n                        <form>\n                            <div class="form-group">\n                            <label for="recipient-name" class="col-form-label">Project Name:</label>\n                            <input type="text" class="form-control" id="project-name">\n                            </div>\n                            <div class="form-group">\n                            <label for="message-text" class="col-form-label">Description:</label>\n                            <input class="form-control" id="project-description">\n                            </div>\n                        </form>\n                        </div>\n                        <div class="modal-footer">\n                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>\n                        <button type="button" class="btn btn-primary" data-dismiss="modal" id = \'save\' >Save</button>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n    ',g();document.getElementById("save").addEventListener("click",()=>{a()})};b(),localStorage.clear();const h=i;h.projectName="ToDo THING on JS",h.projectDescription="Make a To Do list on JS",h.projectSteps={"Design UI":{stepTitle:"Design UI",stepDescription:"Make a general structure for the interface",stepDate:"2020-07-15",stepProject:"ToDo list on pure JS",stepStatus:!0,stepPriority:"high"},"General Backend":{stepTitle:"General Backend",stepDescription:"Create the general models like Projects and Steps",stepDate:"2020-07-16",stepProject:"ToDo list on pure JS",stepStatus:!0,stepPriority:"moderate"},"Beautify interface":{stepTitle:"Beautify interface",stepDescription:'Make the interface beautiful so your work seems "profesional" as they say...',stepDate:"2020-07-17",stepProject:"ToDo list on pure JS",stepStatus:!0,stepPriority:"low"}},o.create(h.projectName,h);const _=i;_.projectName="Learn to Play Go",_.projectDescription="This is self explanatory",_.projectSteps={"Learn the rules":{stepTitle:"Learn the rules",stepDescription:"I mean... that's the least you can do",stepDate:"2020-07-18",stepProject:"Learn to Play Go",stepStatus:!0,stepPriority:"high"},"Check Videos":{stepTitle:"Check Videos",stepDescription:"See other people playing, they know the how...",stepDate:"2020-07-19",stepProject:"Learn to Play Go",stepStatus:!0,stepPriority:"low"},"Play 10":{stepTitle:"Play 10",stepDescription:"Play ten times online, you're going to lose, but... that's the point",stepDate:"2020-07-20",stepProject:"Learn to Play Go",stepStatus:!0,stepPriority:"high"}},o.create(_.projectName,_)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,